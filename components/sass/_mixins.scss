@import "compass/utilities/sprites";
@import "icons/*.png";
@include all-icons-sprites;

$sprites: sprite-map("icons/*.png");
$sprites-retina: sprite-map("icons-2x/*.png");

@mixin sprite-background($name) {
  background-image: sprite-url($sprites);
  background-position: sprite-position($sprites, $name);
  background-repeat: no-repeat;
  display: block;
  height: image-height(sprite-file($sprites, $name));
  width: image-width(sprite-file($sprites, $name));
  @media (-webkit-min-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 3/2), (min-device-pixel-ratio: 2) {
    // Workaround for https://gist.github.com/2140082
    @if (sprite-position($sprites, $name) != sprite-position($sprites-retina, $name)) {
      $ypos: round(nth(sprite-position($sprites-retina, $name), 2) / 2);
      background-position: 0 $ypos;
    }
  }
}

// // Usage.
// .mail-icon {
//   @include sprite-background(mail);

//box-sizing
@mixin box-sizing($value) {
	-moz-box-sizing: $value;
	box-sizing: $value;
}

html {
	@include box-sizing(border-box);
}

*,
*:before,
*:after {
	box-sizing: inherit;
}

// breakpoints
$breakpoints: (
	xs: 400px,
	s: 600px,
  m: 767px,
  l: 1001px,
  xl: 1025px,
  xxl: 1440px
);

@mixin mq($name) {
  @if not map-has-key($breakpoints, $name) {
	@warn "Warning: `#{$name}` is not a valid breakpoint name.";
  }
  @else {
	@media screen and (min-width: map-get($breakpoints, $name)) {
	  @content;
	 }
  }
}

// clearfix
@mixin cf() {
	*zoom:1;
	&:before,
	&:after {
		content:"";
		display:table;
	}
	&:after {
	clear:both;
	}
}
